name: AWS EC2 Self Hosted Runner
description: Create a self hosted runner on AWS EC2
author: Kepler Authors

# Define your inputs here.
inputs:
  action: 
    description: 'The action to perform. One of create, unregister, terminate'
    required: true
  ami_id:
    description: 'The AMI ID to use for the EC2 instance'
    required: false
  instance_type:
    description: 'The instance type to use for the EC2 instance'
    required: false
  create_s3_bucket:
    description: 'Create an S3 bucket to store the runner state'
    required: false
  spot_instance_only:
    description: 'Only use spot instances'
    required: false

# Define your outputs here.
outputs:
  instane_id:
    description: The AWS EC2 instance id
  runner_name:
    description: The name of the self hosted runner
  bucket_name:
    description: The name of the S3 bucket (if created)

runs:
  using: docker
  image: Dockerfile
  env:
    # ACTION is one of create, unregister, terminate
    ACTION: ${{ github.event.inputs.action }} 
    # aws region to use, this could be an input parameter or a secret
    AWS_REGION: ${{ secrets.AWS_REGION }}
    # github token to use, this should be a secret
    GITHUB_TOKEN: ${{ secrets.GH_SELF_HOSTED_RUNNER_TOKEN }}
    # aws access key id and secret access key, these should be secrets
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # AWS security group id, this could be an input parameter or a secret
    SECURITY_GROUP_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}
    # github repository to use, this could be an input parameter or a secret
    GITHUB_REPO: ${{ github.repository }}
    # if defined in the workflow, this will be the ami id to use
    AMI_ID: ${{ github.event.inputs.ami_id }}
    # if defined in the workflow, this will be the instance type to use
    INSTANCE_TYPE: ${{ github.event.inputs.instance_type }}
    # if defined in the workflow
    # this will be a bool whether to create an s3 bucket
    CREATE_S3_BUCKET: ${{ github.event.inputs.create_s3_bucket }}
    # if defined in the workflow
    # this will be a bool whether to use spot instances only
    SPOT_INSTANCE_ONLY: ${{ github.event.inputs.spot_instance_only }}
